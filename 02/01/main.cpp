#include <iostream>

/*
Уравнение для Фибоначчи имеет вид T(n)=T(n-1) + T(n-2) + O(1).
Время, затраченное на вычисление fib (n), равно сумме времени,
затраченного на вычисление fib(n-1) и fib(n-2). Сюда также входит постоянное
время выполнения предыдущего сложения. Решая приведенное выше рекурсивное
уравнение, мы получаем верхнюю границу Фибоначчи как O (2^n) но это не жесткая
верхняя граница.

Память Алгоритма не изменяется O(1) - Так как не зависимо от размера массива
выделяемая память только на переменные
*/

unsigned long long fibo(int n) {
  if (n == 0) {
    return 0;
  }
  if (n == 1 || n == 2) {
    return 1;
  }

  return fibo(n - 1) + fibo(n - 2);
}

int main() {
  int numb;

  std::cout << "Введите число: ";
  std::cin >> numb;

  std::cout << "Числа Фибоначчи: ";

  for (size_t i = 0; i < numb; i++) {
    std ::cout << fibo(i) << " ";
  }
  std ::cout << std::endl;
}